name: Windows

on:
  push:
    tags:
    - '*'

jobs:
  build-windows:
    name: Windows
    runs-on: windows-2016
    steps:
      - uses: actions/checkout@master

      - name: Setup MSBuild.exe
        uses: warrenbuckley/Setup-MSBuild@v1
        # uses: microsoft/setup-msbuild@v1.0.0
        # with:
        #   vs-version: '2017'
        #   vswhere-path: 'C:\path\to\your\tools\'

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.11.0'
          mirror: 'http://mirrors.ocf.berkeley.edu/qt/'
        # uses: ouuan/install-qt-action@v2.3.1

      # - name: Init VS
      #   run: call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\VsMSBuildCmd.bat"

      - name: Build
        shell: powershell
        id: build
        env:
          VCINSTALLDIR: "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/"
          # VS140COMNTOOLS: "C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/Tools/"
          # VS140COMNTOOLS: "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/Common7/Tools"
          # MSVC_REDIST_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Redist/"
          # MSVC_REDIST_DIR: "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/redist/"
          BOOST_ROOT: ""
        run: |
          pushd "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools"
          cmd /c "VsMSBuildCmd.bat&set" |
          foreach {
            if ($_ -match "=") {
              $v = $_.split("="); set-item -force -path "ENV:\$($v[0])"  -value "$($v[1])"
              # echo ::set-env name=$($v[0])::$($v[1])
              Write-Host "$v"
            }
          }
          popd

          $build_folder = "build"
          $release_folder = "Release"
          $ccx_ver = "${{ github.ref }}" -replace 'refs/tags/'
          $release_name = "ccx-desktop-win64-v$ccx_ver"

          $qt5_cmake = "${{ env.Qt5_Dir }}/lib/cmake" -replace '[/]', '\\'
          $filecontent = Get-Content CMakeLists.txt
          $filecontent -replace '^set\(CMAKE_PREFIX_PATH.+',"set(CMAKE_PREFIX_PATH `"$($qt5_cmake)`")" | Set-Content CMakeLists.txt

          Remove-Item cryptonote -Recurse -ErrorAction Ignore
          git clone https://github.com/ConcealNetwork/conceal-core cryptonote

          New-Item "$build_folder\$release_folder" -ItemType Directory
          cd "$build_folder"

          # Copy-Item "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Redist\MSVC\14.16.27012\x64\Microsoft.VC141.CRT\msvcp140.dll" $release_folder
          # Copy-Item "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Redist\MSVC\14.16.27012\x64\Microsoft.VC141.CRT\vccorlib140.dll" $release_folder
          # Copy-Item "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Redist\MSVC\14.16.27012\x64\Microsoft.VC141.CRT\vcruntime140.dll" $release_folder
          
          # Copy-Item "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\redist\x64\Microsoft.VC140.CRT\msvcp140.dll" $release_folder
          # Copy-Item "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\redist\x64\Microsoft.VC140.CRT\vccorlib140.dll" $release_folder
          # Copy-Item "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\redist\x64\Microsoft.VC140.CRT\vcruntime140.dll" $release_folder

          # Copy-Item "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx64\x64\msvcp140.dll" $release_folder
          # Copy-Item "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx64\x64\vccorlib140.dll" $release_folder
          # Copy-Item "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx64\x64\vcruntime140.dll" $release_folder
          # "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\vcruntime140.dll"

          Copy-Item "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Redist" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/" -Recurse
          # Copy-Item "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/redist" "C:/Program Files (x86)/Microsoft Visual Studio 14.0/" -Recurse
          
          # Copy-Item "${{ env.Qt5_Dir }}/bin/*" $release_folder -Filter *.dll -Recurse
          # Copy-Item "${{ env.Qt5_Dir }}/plugins/*" $release_folder -Recurse
          # Copy-Item "${{ env.Qt5_Dir }}/qml/*" $release_folder -Recurse
          # dir

          Start-Process cmake -ArgumentList "-G ""Visual Studio 15 2017 Win64"" -DBOOST_LIBRARYDIR:PATH=C:\hostedtoolcache\windows\Boost\1.69.0 .." -NoNewWindow -Wait
          Start-Process msbuild -ArgumentList "CONCEAL-GUI.sln /p:Configuration=Release" -NoNewWindow -Wait
          
          $build_path = "./$build_folder"
          echo "::set-output name=build_path::${build_path}"
          echo "::set-output name=release_name::${release_name}"

      - name: Pack
        shell: powershell
        id: pack
        env:
          VCINSTALLDIR: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\'
        run: |
          $build_folder = "${{ steps.build.outputs.build_path }}"
          $release_name = "${{ steps.build.outputs.release_name }}"
          $release_folder = "Release"
          cd "$build_folder"
          mkdir "$release_folder/$release_name"
          cd "$release_folder"
          cp *.exe "$release_name/"
          mkdir "$release_folder/$release_name/languages"
          cp ../../src/languages/*.qm "$release_folder/$release_name/languages/"          
          windeployqt --release CONCEAL-GUI.exe --dir "$release_name/"
          cd ../../
          makensis ConcealWallet.nsi
          cd "$build_folder/$release_folder"
          Compress-Archive -Path *.exe -DestinationPath "$release_name.zip"
          $sha256 = (Get-FileHash "$release_name.zip").Hash
          $asset_path = "./$build_folder/$release_folder/$release_name.zip"
          echo "::set-output name=sha256::${sha256}"
          echo "::set-output name=release_name::${release_name}.zip"
          echo "::set-output name=asset_path::${asset_path}"
          echo "::set-output name=ccx_ver::${ccx_ver}"
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.pack.outputs.asset_path }}
          name: Conceal Desktop v${{ steps.build.outputs.ccx_ver }}
          body: |
            **${{ steps.pack.outputs.release_name }}**
            ${{ steps.pack.outputs.sha256 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}